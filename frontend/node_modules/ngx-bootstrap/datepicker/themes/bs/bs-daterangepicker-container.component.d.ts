import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { BsDatepickerAbstractComponent } from '../../base/bs-datepicker-container';
import { BsDatepickerConfig } from '../../bs-datepicker.config';
import { DayViewModel } from '../../models';
import { BsDatepickerActions } from '../../reducer/bs-datepicker.actions';
import { BsDatepickerEffects } from '../../reducer/bs-datepicker.effects';
import { BsDatepickerStore } from '../../reducer/bs-datepicker.store';
import { PositioningService } from 'ngx-bootstrap/positioning';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class BsDaterangepickerContainerComponent extends BsDatepickerAbstractComponent implements OnInit, OnDestroy {
    private _actions;
    private _config;
    private _store;
    private _element;
    private _positionService;
    value: Date[];
    valueChange: EventEmitter<Date[]>;
    animationState: string;
    _rangeStack: Date[];
    _subs: Subscription[];
    constructor(_effects: BsDatepickerEffects, _actions: BsDatepickerActions, _config: BsDatepickerConfig, _store: BsDatepickerStore, _element: ElementRef, _positionService: PositioningService);
    ngOnInit(): void;
    readonly isTopPosition: boolean;
    positionServiceEnable(): void;
    daySelectHandler(day: DayViewModel): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDaterangepickerContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BsDaterangepickerContainerComponent, "bs-daterangepicker-container", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXJhbmdlcGlja2VyLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYnMtZGF0ZXJhbmdlcGlja2VyLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyQWJzdHJhY3RDb21wb25lbnQgfSBmcm9tICcuLi8uLi9iYXNlL2JzLWRhdGVwaWNrZXItY29udGFpbmVyJztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4uLy4uL2JzLWRhdGVwaWNrZXIuY29uZmlnJztcbmltcG9ydCB7IERheVZpZXdNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscyc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJBY3Rpb25zIH0gZnJvbSAnLi4vLi4vcmVkdWNlci9icy1kYXRlcGlja2VyLmFjdGlvbnMnO1xuaW1wb3J0IHsgQnNEYXRlcGlja2VyRWZmZWN0cyB9IGZyb20gJy4uLy4uL3JlZHVjZXIvYnMtZGF0ZXBpY2tlci5lZmZlY3RzJztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlclN0b3JlIH0gZnJvbSAnLi4vLi4vcmVkdWNlci9icy1kYXRlcGlja2VyLnN0b3JlJztcbmltcG9ydCB7IFBvc2l0aW9uaW5nU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9zaXRpb25pbmcnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBCc0RhdGVyYW5nZXBpY2tlckNvbnRhaW5lckNvbXBvbmVudCBleHRlbmRzIEJzRGF0ZXBpY2tlckFic3RyYWN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgX2FjdGlvbnM7XG4gICAgcHJpdmF0ZSBfY29uZmlnO1xuICAgIHByaXZhdGUgX3N0b3JlO1xuICAgIHByaXZhdGUgX2VsZW1lbnQ7XG4gICAgcHJpdmF0ZSBfcG9zaXRpb25TZXJ2aWNlO1xuICAgIHZhbHVlOiBEYXRlW107XG4gICAgdmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxEYXRlW10+O1xuICAgIGFuaW1hdGlvblN0YXRlOiBzdHJpbmc7XG4gICAgX3JhbmdlU3RhY2s6IERhdGVbXTtcbiAgICBfc3ViczogU3Vic2NyaXB0aW9uW107XG4gICAgY29uc3RydWN0b3IoX2VmZmVjdHM6IEJzRGF0ZXBpY2tlckVmZmVjdHMsIF9hY3Rpb25zOiBCc0RhdGVwaWNrZXJBY3Rpb25zLCBfY29uZmlnOiBCc0RhdGVwaWNrZXJDb25maWcsIF9zdG9yZTogQnNEYXRlcGlja2VyU3RvcmUsIF9lbGVtZW50OiBFbGVtZW50UmVmLCBfcG9zaXRpb25TZXJ2aWNlOiBQb3NpdGlvbmluZ1NlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgaXNUb3BQb3NpdGlvbjogYm9vbGVhbjtcbiAgICBwb3NpdGlvblNlcnZpY2VFbmFibGUoKTogdm9pZDtcbiAgICBkYXlTZWxlY3RIYW5kbGVyKGRheTogRGF5Vmlld01vZGVsKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19